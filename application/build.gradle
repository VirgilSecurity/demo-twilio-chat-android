apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'

apply from: '../config-android.gradle'

// App name and version

enum BuildType {
    DEBUG,
    RELEASE
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 7

static def getApkName(BuildType buildType) {
    def APP_NAME = "Virgil "
    switch (buildType) {
        case BuildType.DEBUG:
            return APP_NAME + BuildType.DEBUG.name()
        case BuildType.RELEASE:
            return APP_NAME + BuildType.RELEASE.name()
    }
}

// Android configurations

android {
    signingConfigs {
        release {
            // TODO: add secret stuff here
        }
    }
    defaultConfig {
        applicationId 'com.virgilsecurity.android.virgil'
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        versionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            jniDebuggable false
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
        }
    }
    applicationVariants.all { variant ->

        def applicationName
        def apkName

        if (variant.name == android.buildTypes.debug.name) {
            apkName = getApkName(BuildType.DEBUG) + " v" +
                    versionMajor + "." +
                    versionMinor + "." +
                    versionPatch

            applicationName = "Virgil Debug"
        } else {
            apkName = getApkName(BuildType.RELEASE) + " v" +
                    versionMajor + "." +
                    versionMinor + "." +
                    versionPatch

            applicationName = "Virgil"
        }

        resValue "string", "app_name", applicationName

        variant.outputs.all { output ->
            outputFileName = "${apkName}.apk"
        }
    }
}

// Inner dependencies
dependencies {
    implementation project(':base')
    implementation project(':bcommon')
    implementation project(':feature-login')
    api project(':feature-drawer-navigation')
}

// Outer dependencies
dependencies {
    kotlin()
    support()
    networking()
    reactiveness()
    koin()
    virgil()
    glide()
    architectureComponents()
    firebase()
    fcm()
}

apply plugin: 'com.google.gms.google-services'
