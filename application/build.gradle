apply plugin: 'com.android.application'

apply from: '../config-android.gradle'

// App name and version

enum BuildType {
    DEBUG,
    RELEASE
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

static def getAppName(BuildType buildType) {
    String APP_NAME = "Virgil Messenger"
    switch (buildType) {
        case BuildType.DEBUG:
            return APP_NAME + BuildType.DEBUG.name()
        case BuildType.RELEASE:
            return APP_NAME + BuildType.RELEASE.name()
    }
}

// Android configurations

android {
    defaultConfig {
        applicationId 'com.android.virgilsecurity.twiliodemo'
        versionCode versionMajor * 100000 + versionMinor * 1000 + versionPatch * 10
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", getAppName(BuildType.RELEASE) + "_" + "v" +
                    versionMajor + "." +
                    versionMinor + "." +
                    versionPatch + "_"
        }
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            resValue "string", "app_name", getAppName(BuildType.DEBUG) + "_" + "v" +
                    versionMajor + "." +
                    versionMinor + "." +
                    versionPatch + "_"
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
}

// Inner dependencies
dependencies {
    implementation project(':base')
    implementation project(':common')
    implementation project(':feature-login')
    api project(':feature-drawer-navigation')
    //    implementation project(":feature-channels-list")
    //    implementation project(":feature-channel")
    //    implementation project(":feature-contacts")
    //    implementation project(":feature-settings")
}

// Outer dependencies
dependencies {

    kotlin()
    support()
    networking()
    reactiveness()
    koin()
    twilio()
    virgil()
    glide()
    architectureComponents()
//    circleImageView()
}
